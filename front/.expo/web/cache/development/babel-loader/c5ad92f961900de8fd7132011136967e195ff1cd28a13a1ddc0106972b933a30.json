{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport styles from \"./LoginStyle\";\nimport Button2 from \"../Components/Button\";\nimport { useFonts } from 'expo-font';\nimport { useCallback } from 'react';\nimport httpService from \"../../httpService\";\nimport storageService from \"../../storageService\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    login = _useState2[0],\n    setLogin = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var onSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var result = yield httpService.login({\n        login: login,\n        password: password\n      });\n      var data = yield result.json();\n      if (result.status === 200) {\n        try {\n          storageService.set('userData', data.userData);\n          goToPage('Home');\n          ToastAndroid.show(data.message, 5000);\n        } catch (e) {\n          ToastAndroid.show('Não foi possivel logar no sistema. Tente novamente mais tarde', 5000);\n        }\n      } else {\n        ToastAndroid.show(data.message, 5000);\n      }\n    });\n    return function onSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var goToPage = function goToPage(path) {\n    navigation.navigate(path);\n  };\n  var _useFonts = useFonts({\n      'Benguiat': require(\"../../../assets/fonts/Benguiat.ttf\"),\n      'Aachen': require(\"../../../assets/fonts/Aachen.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 2),\n    fontsLoaded = _useFonts2[0],\n    fontError = _useFonts2[1];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded || fontError) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded, fontError]);\n  if (!fontsLoaded && !fontError) {\n    return null;\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    onLayout: onLayoutRootView,\n    children: [_jsx(View, {\n      style: styles.logo,\n      children: _jsx(Image, {\n        style: {\n          width: 400,\n          height: 400,\n          resizeMode: 'contain'\n        },\n        source: require(\"../../../assets/images/pngegg.png\")\n      })\n    }), _jsx(Text, {\n      style: [styles.setTextColor, {\n        fontFamily: 'Benguiat'\n      }],\n      children: \"Login\"\n    }), _jsx(TextInput, {\n      value: login,\n      onChange: function onChange(event) {\n        setLogin(event.nativeEvent.text);\n      },\n      style: [styles.input, {\n        fontFamily: 'Benguiat'\n      }]\n    }), _jsx(Text, {\n      style: [styles.setTextColor, {\n        fontFamily: 'Benguiat'\n      }],\n      children: \"Password\"\n    }), _jsx(TextInput, {\n      value: password,\n      onChange: function onChange(event) {\n        setPassword(event.nativeEvent.text);\n      },\n      secureTextEntry: true,\n      style: [styles.input, {\n        fontFamily: 'Benguiat'\n      }]\n    }), _jsx(View, {\n      style: styles.createForgotLink,\n      children: _jsx(Text, {\n        onPress: function onPress() {\n          return goToPage(\"CreateAccount\");\n        },\n        style: [styles.link, {\n          fontFamily: 'Benguiat'\n        }],\n        children: \"Create Account\"\n      })\n    }), _jsx(Button2, {\n      onPress: function onPress() {\n        onSubmit();\n      },\n      labelButton: \"Entrar\"\n    }), _jsx(StatusBar, {\n      barStyle: 'light-content'\n    })]\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","useState","Text","View","TextInput","Image","StatusBar","ToastAndroid","styles","Button2","useFonts","useCallback","httpService","storageService","SplashScreen","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","login","setLogin","_useState3","_useState4","password","setPassword","onSubmit","_ref2","_asyncToGenerator","result","data","json","status","set","userData","goToPage","show","message","e","apply","arguments","path","navigate","_useFonts","require","_useFonts2","fontsLoaded","fontError","onLayoutRootView","hideAsync","style","container","onLayout","children","logo","width","height","resizeMode","source","setTextColor","fontFamily","value","onChange","event","nativeEvent","text","input","secureTextEntry","createForgotLink","onPress","link","labelButton","barStyle"],"sources":["/home/tec/Documentos/not-work/facisa/pulp-front/Mobile_2_Bruno/front/src/pages/login/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Text, View, TextInput, Button, Image, StatusBar, ToastAndroid } from 'react-native';\nimport styles from './LoginStyle';\nimport Button2 from '../Components/Button';\nimport { useFonts } from 'expo-font';\nimport { useCallback } from 'react';\nimport httpService from '../../httpService';\nimport storageService from '../../storageService';\nimport * as SplashScreen from 'expo-splash-screen';\n\n\nconst Login = ({navigation}: any) => {\n    const[login, setLogin] = useState('')\n    const[password, setPassword] = useState('')\n    const onSubmit = async () => {\n      const result = await httpService.login({login, password})\n      const data = await result.json()\n      if(result.status === 200) {\n        try {\n          storageService.set('userData', (data.userData))\n          goToPage('Home')\n          ToastAndroid.show(data.message, 5000)\n        } catch(e) {\n          ToastAndroid.show('Não foi possivel logar no sistema. Tente novamente mais tarde', 5000)\n        }\n      } else {\n        ToastAndroid.show(data.message, 5000)\n      }\n    }\n    const goToPage = (path: any) => {\n        navigation.navigate(path);\n    }\n\n    const [fontsLoaded,fontError] = useFonts({\n      'Benguiat': require('../../../assets/fonts/Benguiat.ttf'),\n      'Aachen': require('../../../assets/fonts/Aachen.ttf'),\n    });\n\n    const onLayoutRootView = useCallback(async () => {\n      if (fontsLoaded || fontError) {\n        await SplashScreen.hideAsync();\n      }\n    }, [fontsLoaded, fontError]);\n  \n    if (!fontsLoaded && !fontError) {\n      return null;\n    }\n\n  return ( \n    \n      <View style={styles.container} onLayout={onLayoutRootView}>\n        <View style={styles.logo}>\n        <Image style={{width:400, height: 400, resizeMode: 'contain'}} source={require('../../../assets/images/pngegg.png')}/>\n        </View>\n        <Text style={[styles.setTextColor, {fontFamily: 'Benguiat'}]}>Login</Text>\n        <TextInput value={login}\n          onChange={(event) => {setLogin(event.nativeEvent.text)}}  style={[styles.input, {fontFamily: 'Benguiat'}]}/>\n        <Text style={[styles.setTextColor, {fontFamily: 'Benguiat'}]}>Password</Text>\n        <TextInput value={password}\n          onChange={(event) => {setPassword(event.nativeEvent.text)}}  secureTextEntry={true} style={[styles.input, {fontFamily: 'Benguiat'}]}/>\n        <View style={styles.createForgotLink}>\n          <Text onPress={()=> (goToPage(\"CreateAccount\"))} style={[styles.link,{fontFamily: 'Benguiat'}]}>Create Account</Text>\n        </View>\n        <Button2 onPress={()=>\n          { \n            onSubmit()\n          }} labelButton=\"Entrar\"></Button2>\n        <StatusBar barStyle={'light-content'}/>\n      </View>\n\n  )\n}\n\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}