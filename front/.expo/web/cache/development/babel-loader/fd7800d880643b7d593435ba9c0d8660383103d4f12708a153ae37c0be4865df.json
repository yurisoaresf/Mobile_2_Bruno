{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect } from 'react';\nimport { Fragment } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState } from 'react';\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Balloon from \"./Baloon\";\nimport styles from \"./ChatStyles\";\nimport storageService from \"../../storageService\";\nimport { io } from 'socket.io-client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Chat = function Chat() {\n  useEffect(function () {\n    var socket = io(\"http://192.168.0.10:3000\");\n    setSocket(socket);\n    socket.on(\"connection\", function () {\n      console.log(\"Connected to the server!\");\n    });\n    storageService.get('userData').then(function (userData) {\n      console.log(userData);\n      setUserData(userData);\n    });\n    return function () {\n      socket.disconnect();\n    };\n  }, []);\n  var sendMessage = function sendMessage() {\n    socketState.emit('chat message', text);\n    var newMessage = {\n      content: text,\n      sentBy: userData.login\n    };\n    setChat(_objectSpread(_objectSpread({}, chat), {}, {\n      messages: [].concat(_toConsumableArray(chat.messages), [newMessage])\n    }));\n    setText(\"\");\n  };\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    socketState = _useState2[0],\n    setSocket = _useState2[1];\n  var content = {\n    messages: []\n  };\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    text = _useState4[0],\n    setText = _useState4[1];\n  var _useState5 = useState(content),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chat = _useState6[0],\n    setChat = _useState6[1];\n  var _useState7 = useState({\n      login: '',\n      token: '',\n      image: ''\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    userData = _useState8[0],\n    setUserData = _useState8[1];\n  return _jsxs(Fragment, {\n    children: [_jsx(ScrollView, {\n      children: chat.messages.length > 0 ? chat.messages.map(function (m, index) {\n        return _jsx(Balloon, {\n          message: m,\n          currentUser: userData.login\n        }, index);\n      }) : _jsx(Text, {\n        style: {\n          marginTop: '5%',\n          alignSelf: 'center',\n          color: '#848484'\n        },\n        children: \"Sem mensagens no momento\"\n      })\n    }), _jsx(SafeAreaView, {\n      children: _jsxs(View, {\n        style: styles.messageTextInputContainer,\n        children: [_jsx(TextInput, {\n          style: styles.messageTextInput,\n          placeholder: \"Digite sua mensagem...\",\n          placeholderTextColor: Colors.light,\n          value: text,\n          multiline: true,\n          onChangeText: function onChangeText(message) {\n            return setText(message);\n          }\n        }), _jsx(TouchableOpacity, {\n          style: styles.sendButton,\n          disabled: !text,\n          onPress: function onPress() {\n            return sendMessage();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: Colors.white\n            },\n            children: \"Enviar\"\n          })\n        })]\n      })\n    })]\n  });\n};\nexport default Chat;","map":{"version":3,"names":["React","useEffect","Fragment","ScrollView","Text","SafeAreaView","View","TextInput","useState","Colors","TouchableOpacity","Balloon","styles","storageService","io","jsx","_jsx","jsxs","_jsxs","Chat","socket","setSocket","on","console","log","get","then","userData","setUserData","disconnect","sendMessage","socketState","emit","text","newMessage","content","sentBy","login","setChat","_objectSpread","chat","messages","concat","_toConsumableArray","setText","_useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","token","image","_useState8","children","length","map","m","index","message","currentUser","style","marginTop","alignSelf","color","messageTextInputContainer","messageTextInput","placeholder","placeholderTextColor","light","value","multiline","onChangeText","sendButton","disabled","onPress","white"],"sources":["/home/tec/Documentos/not-work/facisa/pulp-front/Mobile_2_Bruno/front/src/pages/Chat/Chat.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { Fragment } from 'react'\nimport { ScrollView, Text, SafeAreaView, View, TextInput } from 'react-native'\nimport { useState } from 'react'\nimport { Colors } from 'react-native/Libraries/NewAppScreen'\nimport { TouchableOpacity } from 'react-native'\nimport Balloon from './Baloon'\nimport styles from './ChatStyles'\nimport storageService from '../../storageService'\nimport { io, Socket }  from 'socket.io-client'\n\ntype Message = {\n    content: string;\n    sentBy: string;\n\n};\n\ntype User = {\n    login: string;\n    token: string;\n    image: string;\n}\n\nconst Chat = () => {\n    \n    \n  \n    \n    useEffect(()=>{\n        const socket : Socket = io(\"http://192.168.0.10:3000\");\n        setSocket(socket)\n\n        socket.on(\"connection\", () => {\n            console.log(\"Connected to the server!\");\n        });\n\n        \n        storageService.get('userData').then((userData: any) =>{\n            console.log(userData)\n            setUserData(userData)  \n        })\n\n        return () => {\n            // Limpar recursos quando o componente for desmontado\n            socket.disconnect();\n          };\n    }, [])\n\n    const sendMessage = () => {\n  \n       socketState.emit('chat message', text); \n       const newMessage: Message = {\n        content: text,\n        sentBy: userData.login,\n       };\n       setChat({ ...chat, messages: [...chat.messages,newMessage] });\n       setText(\"\")      \n    }\n\n    const[socketState,setSocket] = useState(null)\n    const content: any = {messages: [] }\n    const [text, setText] = useState('')\n    const[chat,setChat] = useState<Message[]>(content)\n    const[userData,setUserData] = useState<User>({\n        login: '',\n        token: '',\n        image: ''\n      });\n    \n  return (\n    <Fragment>\n        <ScrollView>\n        {\n            chat.messages.length > 0 ?\n            chat.messages.map((m:any, index: number) => (\n                <Balloon key={index} message={m} currentUser={userData.login} />\n                \n            )): \n            <Text style={{marginTop: '5%', alignSelf:'center', color: '#848484'}}>\n                Sem mensagens no momento\n            </Text>\n            \n        }\n\n\n        </ScrollView>\n        <SafeAreaView>\n\n            <View style={styles.messageTextInputContainer}>\n                <TextInput\n                    style={styles.messageTextInput}\n                    placeholder=\"Digite sua mensagem...\"\n                    placeholderTextColor={Colors.light}\n                    value={text}\n                    multiline\n                    onChangeText={(message) => setText(message)}\n                />\n                <TouchableOpacity\n                    style={styles.sendButton}\n                    disabled={!text}\n                    onPress={() => sendMessage()}>\n                    <Text style={{color: Colors.white}}>Enviar</Text>    \n                    </TouchableOpacity>\n            </View>\n        </SafeAreaView>\n    </Fragment>\n  )\n}\n\nexport default Chat "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}